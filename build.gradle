apply from: file("${rootDir}/gradle/project.gradle")

subprojects {
    apply from: file("${rootDir}/gradle/check.gradle")

    group = 'core.framework'
    version = '4.12.4'
}

def mongoVersion = '3.4.2'
def elasticVersion = '5.4.0'
def rabbitVersion = '3.6.5'
def kafkaVersion = '0.10.2.0'
def jacksonVersion = '2.8.7'

project(':core-ng-api') {
    apply from: file("${rootDir}/gradle/lib.gradle")
}

project(':core-ng') {
    apply from: file("${rootDir}/gradle/lib.gradle")
    dependencies {
        api(
                project(":core-ng-api"),
                'javax.inject:javax.inject:1',
                'org.slf4j:slf4j-api:1.7.21'
        )
        implementation(
                'org.javassist:javassist:3.21.0-GA',
                "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}",
                "com.fasterxml.jackson.module:jackson-module-jaxb-annotations:${jacksonVersion}",
                "com.fasterxml.jackson.module:jackson-module-afterburner:${jacksonVersion}",
                "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}",
                "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jacksonVersion}",
                'org.apache.httpcomponents:httpclient:4.5.3',
                'io.undertow:undertow-core:1.4.12.Final'
        )
        compileOnly(
                'redis.clients:jedis:2.9.0@jar',
                "org.mongodb:mongo-java-driver:${mongoVersion}",
                "com.rabbitmq:amqp-client:${rabbitVersion}",
                "org.apache.kafka:kafka-clients:${kafkaVersion}@jar",
                "org.elasticsearch.client:transport:${elasticVersion}",
                'org.apache.logging.log4j:log4j-api:2.7'   // used by elasticsearch
        )
        testImplementation(
                'junit:junit:4.12',
                'org.mockito:mockito-core:2.7.22'
        )
        testRuntimeOnly(
                'org.hsqldb:hsqldb:2.3.3'
        )
    }
}

project(':core-ng-test') {
    apply from: file("${rootDir}/gradle/lib.gradle")

    dependencies {
        api(
                project(":core-ng"),
                'junit:junit:4.12',
                'org.mockito:mockito-core:2.7.13'
        )
        compileOnly(
                "org.mongodb:mongo-java-driver:${mongoVersion}",
                "com.github.fakemongo:fongo:2.0.12@jar",
                "com.rabbitmq:amqp-client:${rabbitVersion}",
                "org.apache.kafka:kafka-clients:${kafkaVersion}@jar",
                "org.elasticsearch.client:transport:${elasticVersion}",
                'org.apache.logging.log4j:log4j-core:2.7'       // used by elasticsearch
        )
        testRuntimeOnly(
                'org.hsqldb:hsqldb:2.3.3',
                'com.vividsolutions:jts:1.13'                  // used by fongo
        )
    }
}

configure(subprojects.findAll { it.name.startsWith('core-ng') }) {
    apply plugin: 'maven-publish'
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar {
                    classifier 'sources'
                }
            }
        }
        repositories {
            maven {
                url System.properties['maven.repo']     // set in gradle.properties, e.g. systemProp.maven.repo=/path
            }
        }
    }
}

project(':log-processor') {
    apply from: file("${rootDir}/gradle/app.gradle")
    dependencies {
        compile(
                project(':core-ng'),
                "org.elasticsearch.client:transport:${elasticVersion}",
                "org.apache.kafka:kafka-clients:${kafkaVersion}"
        )
        runtime(
                'org.apache.logging.log4j:log4j-api:2.7'       // used by elasticsearch
        )
        testCompile(
                project(':core-ng-test'),
                'org.apache.logging.log4j:log4j-core:2.7'       // used by elasticsearch
        )
    }
}