{
  "services": [
    {
      "name": "TestWebService",
      "operations": [
        {"name": "search", "method": "GET", "path": "/test", "pathParams": [], "responseType": "TestWebService$TestResponse", "requestType": "TestWebService$TestSearchRequest"},
        {"name": "get", "method": "GET", "path": "/test/:id", "pathParams": [{"name": "id", "type": "number"}], "responseType": "TestWebService$TestResponse | null", "requestType": null},
        {"name": "create", "method": "PUT", "path": "/test/:id", "pathParams": [{"name": "id", "type": "number"}], "responseType": "void", "requestType": "TestWebService$TestRequest"},
        {"name": "delete", "method": "DELETE", "path": "/test/:id", "pathParams": [{"name": "id", "type": "string"}], "responseType": "void", "requestType": null},
        {"name": "patch", "method": "PATCH", "path": "/test/:id", "pathParams": [{"name": "id", "type": "number"}], "responseType": "void", "requestType": "TestWebService$TestRequest"}
      ]
    }
  ],
  "types": [
    {"name": "TestWebService$TestSearchRequest", "type": "interface", "definition": "{ int_field: number; boolean_field?: boolean; long_field?: number; double_field?: number; date_field?: Date; }"},
    {"name": "TestWebService$TestResponse", "type": "interface", "definition": "{ int_field: number; string_map?: {[key:string]: string;}; items?: {[key:string]: TestWebService$TestItem;}; }"},
    {"name": "TestWebService$TestItem", "type": "interface", "definition": "{ zoned_date_time_field?: Date; enum_field?: TestWebService$TestEnum; }"},
    {"name": "TestWebService$TestRequest", "type": "interface", "definition": "{ string_field: string; items?: TestWebService$TestItem[]; }"},
    {"name": "TestWebService$TestEnum", "type": "enum", "definition": "{ A = \"A1\", B = \"B1\", }"}
  ]
}
